"0","smaller_dfm <- dfm_trim(lyrics_dfm, min_termfreq = 10)"
"0","smaller_dfm <- dfm_trim(smaller_dfm, min_docfreq = .2, docfreq_type = ""prop"")"
"0",""
"0","# create fcm from dfm"
"0","smaller_fcm <- fcm(smaller_dfm)"
"0",""
"0","# check the dimensions (i.e., the number of rows and the number of columnns)"
"0","# of the matrix we created"
"0","dim(smaller_fcm)"
"1","[1]"
"1"," 18"
"1"," 18"
"1","
"
"0","myFeatures <- names(topfeatures(smaller_dfm, 30))"
"0",""
"0","# retain only those top features as part of our matrix"
"0","even_smaller_fcm <- fcm_select(smaller_fcm, pattern = myFeatures, selection = ""keep"")"
"0",""
"0","# check dimensions"
"0","dim(even_smaller_fcm)"
"1","[1]"
"1"," 18"
"1"," 18"
"1","
"
"0","# compute size weight for vertices in network"
"0","size <- log(colSums(even_smaller_fcm))"
"0",""
"0","# create plot"
"0","textplot_network(even_smaller_fcm, vertex_size = size / max(size) * 3)"
