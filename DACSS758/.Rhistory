setwd("/Users/sophieryan/Documents/GitHub/Blogs")
getwd()
setwd("/Users/sophieryan/Documents/GitHub/Blogs")
setwd("/Users/sophieryan/Documents/GitHub/Blogs")
setwd("/Users/sophieryan/Documents/GitHub/Blogs")
setwd("/Users/sophieryan/Documents/GitHub/Blogs")
library(rvest)
install.packages("httr")
install.packages("httr")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("dplyr")
install.packages("rvest")
library(httr)
library(jsonlite)
library(jsonlite)
library(dplyr)
library(httr)
library(jsonlite)
library(dplyr)
library(rvest)
url <- https://api-dialog.proquest.com/v1/search
url <- https://api-dialog.proquest.com/v1/search
url <- https:/api-dialog.proquest.com/v1/search
url <- https:api-dialog.proquest.com/v1/search
url <- https//:api-dialog.proquest.com/v1/search
url <- "https//:api-dialog.proquest.com/v1/search"
api_token <- "659b3683-03ba-42fb-9f13-88d8a892e185"
query <- "SU(counterculture) AND PD(1960-1975)"
params <- "SU(counterculture) AND PD(1960-1975)"
response <- GET(url, query = params)
url <- "https//:api-dialog.proquest.com/v1/search"
api_token <- "659b3683-03ba-42fb-9f13-88d8a892e185"
params <- "SU(counterculture) AND PD(1960-1975)"
response <- GET(url, query = params)
url <- "https://api.proquest.com/search/v1"
api_token <- "659b3683-03ba-42fb-9f13-88d8a892e185"
params <- "SU(counterculture) AND PD(1960-1975)"
response <- GET(url, query = params)
url <- "https://api.genius.com/search"
api_token <- "pJHBJy1tpu-wzcXXYLqx5wq8ZgO3N2Z0q-9IqIrBcDTwo4N8ruiTnyeq-oaOAQq8"
library(httr)
library(jsonlite)
library(rvest)
# Set your API token
api_token <- "pJHBJy1tpu-wzcXXYLqx5wq8ZgO3N2Z0q-9IqIrBcDTwo4N8ruiTnyeq-oaOAQq8"
# Define the artist and era
artist_name <- "Bob Dylan"
query <- gsub(" ", "%20", artist_name)
# Genius API endpoint
base_url <- "https://api.genius.com/search"
# Make the API request
response <- GET(
url = base_url,
query = list(q = query),
add_headers(Authorization = paste("Bearer", api_token))
)
# Check status and parse response
if (status_code(response) == 200) {
data <- content(response, as = "text", encoding = "UTF-8")
results <- fromJSON(data)
# Extract the first song URL
song_url <- results$response$hits[[1]]$result$url
print(paste("Song URL:", song_url))
} else {
stop("Failed to get song URL. Check API token or query.")
}
response
queries <- c("Hey Jude The Beatles", "Imagine John Lennon", "Purple Haze Jimi Hendrix")
for (query in queries) {
# Encode the query for the URL
query <- gsub(" ", "%20", query)
# Send the request
response <- GET(
url = base_url,
query = list(q = query),
add_headers(Authorization = paste("Bearer", api_token))
)
# Parse the response
if (status_code(response) == 200) {
data <- content(response, as = "text", encoding = "UTF-8")
results <- fromJSON(data)
# Check for hits
if (length(results$response$hits) > 0) {
song_url <- results$response$hits[[1]]$result$url
print(paste("Song URL:", song_url))
} else {
print(paste("No results for:", query))
}
} else {
print("Failed to get song URL.")
}
}
library(httr)
library(jsonlite)
library(dplyr)
# Spotify API Credentials
client_id <- "ed1422d45f4e4a41ae66c01667b9ae9c"
client_secret <- "ec38e39f5b7341dab63e802023a932ce"
# Get Access Token
res <- POST(
"https://accounts.spotify.com/api/token",
accept_json(),
authenticate(client_id, client_secret),
body = list(grant_type = "client_credentials"),
encode = "form"
)
# Parse the response to get the access token
access_token <- content(res)$access_token
# Search for songs by artist
artist_name <- "The Beatles"
query <- gsub(" ", "%20", artist_name)
url <- paste0("https://api.spotify.com/v1/search?q=", query, "&type=track&limit=10")
# Make the API request
res <- GET(url, add_headers(Authorization = paste("Bearer", access_token)))
# Parse the response
data <- content(res, as = "text", encoding = "UTF-8")
results <- fromJSON(data)
# Extract song metadata
tracks <- results$tracks$items %>%
select(name, album.name, artists = artists[[1]]$name, release_date = album$release_date, popularity)
# Search for songs by artist
artist_name <- "The Beatles"
query <- gsub(" ", "%20", artist_name)
url <- paste0("https://api.spotify.com/v1/search?q=", query, "&type=track&limit=10")
# Make the API request
res <- GET(url, add_headers(Authorization = paste("Bearer", access_token)))
# Parse the response
data <- content(res, as = "text", encoding = "UTF-8")
results <- fromJSON(data)
tracks <- results$tracks$items %>%
mutate(
track_name = name,
album_name = album$name,
artist_name = map_chr(artists, ~ .x[[1]]$name),
release_date = album$release_date,
popularity = popularity
) %>%
select(track_name, album_name, artist_name, release_date, popularity)
install.packages("purrr")
library(purr)
install.packages("purrr")
library(purrr)
# Search for songs by artist
artist_name <- "The Beatles"
query <- gsub(" ", "%20", artist_name)
url <- paste0("https://api.spotify.com/v1/search?q=", query, "&type=track&limit=10")
# Make the API request
res <- GET(url, add_headers(Authorization = paste("Bearer", access_token)))
# Parse the response
data <- content(res, as = "text", encoding = "UTF-8")
results <- fromJSON(data)
tracks <- results$tracks$items %>%
mutate(
track_name = name,
album_name = album$name,
artist_name = map_chr(artists, ~ .x[[1]]$name),
release_date = album$release_date,
popularity = popularity
) %>%
select(track_name, album_name, artist_name, release_date, popularity)
